# Python 代码标准

## 1. 代码风格
- 遵循 PEP 8 规范
- 行长度不超过 120 字符
- 使用 4 个空格缩进
- 函数和类之间空两行
- 导入语句分组：标准库、第三方库、本地库

## 2. 命名规范
- 变量和函数使用 snake_case
- 类名使用 PascalCase
- 常量使用 UPPER_CASE
- 私有方法和属性使用下划线前缀

## 3. 文档规范
- 所有函数必须有 docstring
- 使用 Google 或 NumPy 风格的 docstring
- 复杂逻辑需要注释说明
- 模块开头应该有模块级 docstring

## 4. 导入规范
- 标准库、第三方库、本地库分组导入
- 使用绝对导入而非相对导入
- 避免使用通配符导入（from module import *）
- 导入顺序：标准库、第三方库、本地库

## 5. 错误处理
- 使用具体的异常类型
- 避免捕获过于宽泛的 Exception
- 提供有意义的错误信息
- 使用 try-except-else-finally 结构

## 6. 函数设计
- 函数应该短小精悍（不超过 50 行）
- 单一职责原则
- 参数数量不超过 5 个
- 返回值类型应该明确

## 7. 类设计
- 遵循单一职责原则
- 使用组合而非继承
- 提供清晰的公共接口
- 避免过度设计

## 8. 性能考虑
- 避免在循环中重复计算
- 使用生成器处理大数据集
- 合理使用缓存
- 避免不必要的对象创建

## 9. 安全考虑
- 避免硬编码敏感信息
- 使用环境变量管理配置
- 验证用户输入
- 使用安全的随机数生成器

## 10. 测试规范
- 编写单元测试
- 测试覆盖率不低于 80%
- 使用描述性的测试名称
- 测试应该独立且可重复 