# Azure DevOps Pipeline 配置
# 此 pipeline 可以直接从 GitHub 仓库触发
# 在 Azure DevOps 中创建 pipeline 时，选择 GitHub 作为代码源

trigger:
  - main

pr:
  - main

variables:
  - group: AI_CODE_REVIEW  # 你的变量组，需包含 MOONSHOT_API_KEY

pool:
  vmImage: 'ubuntu-latest'

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'
      addToPath: true

  - script: |
      pip install -r requirements.txt || pip install python-docx pyyaml requests
    displayName: 'Install dependencies'

  - script: |
      echo "当前工作目录: $(pwd)"
      echo "列出文件:"
      ls -la
      echo "检查 result 目录:"
      ls -la result/ || echo "result 目录不存在"
    displayName: 'Debug: 检查工作目录'

  - script: |
      python auto_review.py \
        --moonshot_api_key $(MOONSHOT_API_KEY) \
        --pr_only
    displayName: 'Kimi AI 代码自动审核'

  - script: |
      echo "审核完成，检查 result 目录:"
      ls -la result/ || echo "result 目录不存在"
      if [ -d "result" ]; then
        echo "result 目录内容:"
        ls -la result/
      fi
    displayName: 'Debug: 检查审核结果'

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: 'result'
      artifactName: 'AI-Review-Results'
      publishLocation: 'Container'
    displayName: '发布 AI 审核结果到 Build Artifacts'
    condition: succeededOrFailed()